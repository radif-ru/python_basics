"""Задание 3.

Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список
только числами. Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и
отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

"""


class NumErrors(Exception):
    def __init__(self, txt):
        self.txt = txt

    @staticmethod
    def is_digit(string):
        if string.isdigit():
            return True
        else:
            try:
                float(string)
                return True
            except ValueError:
                return False


user_list = []
while True:
    user_val = input('Введите число: ')
    try:
        if NumErrors.is_digit(user_val):
            user_list.append(user_val)
        elif user_val == 'stop':
            break
        else:
            raise NumErrors('Нужно вводить только числа')
    except NumErrors as err:
        print(err)

print(user_list)
